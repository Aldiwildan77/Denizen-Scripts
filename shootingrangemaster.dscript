# This thing will manage the shooting range, sending carts and such.
# It was written by Wahrheit and you better believe it
# @author Wahrheit
# @version 1.0
# @last-updated May 20 2013

"Shooting Range":
    type: assignment
    interact scripts:
    - 10 Target Practice
    actions:
        on assignment:
        - runtask 'script:Slingshot'

"Range Master Format":
    type: format
    format: "<gray>Range Master<white><&co> <text>"

"Slingshot":
    type: task
    script:
    - teleport npc 'location:<anchor:sr1>'
    - trigger name:proximity toggle:true cooldown:0.1s radius:6
    - trigger name:chat toggle:true cooldown:0.1s radius:6

"Minecart Listener":
    type: world
    events:
        on player kills minecart:
        - if "<npc.flag[range-time]>" == "start" && "<player.name>" == "<npc.flag[active-player]>" flag npc "minecarts-hit:++"
    
"Begin Game":
    type: task
    script:
    - flag npc minecarts-hit:0
    - flag npc active-player:<player.name>
    - flag npc "Minecarts-1:->:MinecartA"
    - flag npc "Minecarts-1:->:MinecartB"
    - flag npc "Minecarts-1:->:MinecartC"
    - flag npc "Minecarts-1:->:MinecartD"
    - flag npc "Minecarts-1:->:MinecartE"
    - flag npc "Minecarts-2:->:MinecartF"
    - flag npc "Minecarts-2:->:MinecartG"
    - flag npc "Minecarts-2:->:MinecartH"
    - flag npc "Minecarts-2:->:MinecartI"
    - flag npc "Minecarts-2:->:MinecartJ"
    - flag npc range-time:start
    - random 2
    - flag npc range-side:right
    - flag npc range-side:left

#"Wait Test":
#    type: task
#    script:
#    - narrate "Starting Wait"
#    - wait 64
#    - narrate "Ending Wait"
    
"Start Timer":
    type: task
    script:
    - runtask "script:Roll Carts"
    - wait 64
    - runtask "script:End Game"

    
"End Game":
    type: task
    script:
    - flag npc "range-time:end"
    - announce "End Game has been triggered."
    
"Roll Carts":
    type: task
    script:
    - random 2
    - if "<npc.flag[range-time]>" == "start" flag npc range-side:right else runtask "script:Time Up"
    - if "<npc.flag[range-time]>" == "start" flag npc range-side:left else runtask "script:Time Up"
    - if "<npc.flag[range-side]>" == "right" runtask "script:Right Cart"
    - if "<npc.flag[range-side]>" == "left" runtask "script:Left Cart"
    - if "<npc.flag[range-side]>" == 0 runtask "script:Time Up"
    - if "<npc.flag[range-side]>" == 0 announce "Roll Carts has detected end game."
    
"Right Cart":
    type: task
    script:
    - flag npc "Current Minecart:<npc.flag[Minecarts-1].random>"
    - switch "location:<anchor:<npc.flag[Current Minecart]>>" state:on duration:1
    - flag npc "Minecarts-1:<-:<npc.flag[Current Minecart]>"
    - runtask "script:Add Cart Right" delay:6
    - if "<npc.flag[range-side]>" == right || "<npc.flag[range-side]>" == left runtask "script:Roll Carts" delay:4

"Add Cart Right":
    type: task
    script:
    - flag npc "Minecarts-1:->:<npc.flag[Current Minecart]>"

"Left Cart":
    type: task
    script:
    - flag npc "Current Minecart:<npc.flag[Minecarts-2].random>"
    - switch "location:<anchor:<npc.flag[Current Minecart]>>" state:on duration:1
    - flag npc "Minecarts-2:<-:<npc.flag[Current Minecart]>"
    - runtask "script:Add Cart Left" delay:6
    - if "<npc.flag[range-side]>" == right || "<npc.flag[range-side]>" == left runtask "script:Roll Carts" delay:4
    
"Add Cart Left":
    type: task
    script:
    - flag npc "Minecarts-2:->:<npc.flag[Current Minecart]>"
    
"Time Up":
    type: task
    script:
    - flag npc range-winnings:<m<flag.npc[minecarts-hit]>*3>
    - narrate "format:Range Master Format" "Time's up! You won '<npc.flag[range-winnings]>' gold!"
#    - execute as_server money grant <player.name> "<npc.flag[range-winnings]>"
    - execute as_server warp <player.name> shootingrange
    - zap 'script:Target Practice' 'step:In Range'

"Target Practice":
    type: interact
    steps:
        'In Range*':
            proximity trigger:
                entry:
                    radius: 6
                    script:
                    - if <player.money> > 8 narrate "format:Range Master Format" "Hey there <player.name>! Come to practice your aim? It'll cost you 8 gold, but I'll give you 2 for each target! Right click me to start."
                    - if <player.money> == 8 narrate "format:Range Master Format" "Hey there <player.name>! Looks like you've got just enough to play a round, are you up for it? It'll cost 8 gold, but I'll give you 2 per target! Right click me to start."
                    - if <player.money> < 8 narrate "format:Range Master Format" "Hey there <player.name>! Doesn't look like you have enough cash to play, come back later and take a shot or two."
                exit:
                    radius: 6
                    script:
                    - narrate "format:Range Master Format" "Thanks for visiting, come back soon."
            click trigger:
                script:
                - narrate "format:Range Master Format" "Click me once more to get started!"
                - zap 'step:Game Start'
        'Game Start':
            click trigger:
                script:
                - narrate "format:Range Master Format" "Okay, you've got 1 minute! Good luck!"
                - execute as_server "warp <player.name> shootingrange-1"
                - runtask "script:Begin Game" instant
                - runtask "script:Wait Test"
                - runtask "script:Start Timer"