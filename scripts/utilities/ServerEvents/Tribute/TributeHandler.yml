Tribute_Handler:
    type: world
    debug: false
    events:
        on system time hourly:
        - if <util.date.format[EEE]> != Fri || <util.date.format[EEE]> != Mon:
            - queue clear
        - else if <util.date.format[EEE]> == Fri:
            - if <yaml[events].read[tribute.active]>:
                - queue clear
            - else:
                - yaml set id:events tribute.active:true
                - yaml set id:rates drop.active:true
                - yaml set id:rates drop.multiplier: 1
                - yaml set id:rates experience.active:true
                - yaml set id:rates experience.multiplier:1
                - yaml id:rates savefile:scriptdata\Rates.yml
                - yaml id:events savefile:scriptdata\Events.yml
                - reload
        - else if <util.date.format[EEE]> == Mon:
            - if <yaml[events].read[tribute.active]> == false:
                - queue clear
            - else:
                - yaml set id:events tribute.active:false
                - yaml set id:events tribute.mcmmo.rate:1
                - yaml set id:events tribute.mcmmo.progress:0
                - yaml set id:events tribute.drops.rate:1
                - yaml set id:events tribute.drops.progress:0
                - yaml set id:events tribute.experience.rate:1
                - yaml set id:events tribute.experience.progress:0
                - yaml set id:rates drop.active:false
                - yaml set id:rates drop.multiplier: 1
                - yaml set id:rates experience.active:false
                - yaml set id:rates experience.multiplier:1
                - yaml id:rates savefile:scriptdata\Rates.yml
                - yaml id:events savefile:scriptdata\Events.yml
                - execute as_server "xprate reset"
        on player joins:
        - if <yaml[events].read[tribute.active].not>:
            - queue clear
        - if <yaml[events].read[tribute.active]>:
            - wait 3s
            - narrate "<&6>The Gods seek your offerings of Tribute! Collect Tribute and deliver it to the <&2>Oracle of the Gods<&6> in the castle in Dawn's Landing!"
            - if <yaml[events].read[tribute.mcmmo.rate]> > 1 || <yaml[events].read[tribute.drops.rate]> > 1 || <yaml[events].read[tribute.experience.rate]> > 1:
                - narrate "<&a>Current blessings:"
                - narrate "<&a>Blessing of Skillfulness: <&6><yaml[events].read[mcmmo.rate]>x"
                - narrate "<&a>Blessing of Luck: <&6><yaml[events].read[drops.rate]>x"
                - narrate "<&a>Blessing of Wisdom: <&6><yaml[events].read[experience.rate]>x"
        on player receives message:
        - if "<context.message.contains_text[mcMMO is currently in an XP rate event]>" && <yaml[events].read[tribute.active]>:
            - determine cancelled

Tribute_DropTable_Veteran:
    type: world
    debug: false
    events:
        on mm denizen death:
        - if <yaml[events].read[tribute.active]> == false:
            - queue clear
        - if !<context.entity.name.starts_with[<&9>]||null>:
            - queue clear
        - else if <context.entity.name.starts_with[<&9>]||null>:
            - if <util.random.int[1].to[10]> <= 1:
                - drop GodsTribute location:<context.entity.location>

Tribute_DropTable_Elite:
    type: world
    debug: false
    events:
        on mm denizen death:
        - if <yaml[events].read[tribute.active]> == false:
            - queue clear
        - if !<context.entity.name.starts_with[<&d>]||null>:
            - queue clear
        - else if <context.entity.name.starts_with[<&d>]||null>:
                - drop GodsTribute location:<context.entity.location>

Tribute_mcMMO_Drops:
    type: world
    debug: false
    events:
        on player gains xp for mining:
        - if <yaml[events].read[tribute.active]> == false:
            - queue clear
        - if <util.random.int[1].to[2500]> <= 1:
            - give GodsTribute
            - narrate "<&a>You found a Tribute to the Gods!"

        on player gains xp for herbalism:
        - if <yaml[events].read[tribute.active]> == false:
            - queue clear
        - if <util.random.int[1].to[2500]> <= 1:
            - give GodsTribute
            - narrate "<&a>You found a Tribute to the Gods!"

        on player gains xp for fishing:
        - if <yaml[events].read[tribute.active]> == false:
            - queue clear
        - if <util.random.int[1].to[250]> <= 1:
            - give GodsTribute
            - narrate "<&a>You found a Tribute to the Gods!"

        on player gains xp for woodcutting:
        - if <yaml[events].read[tribute.active]> == false:
            - queue clear
        - if <util.random.int[1].to[1500]> <= 1:
            - give GodsTribute
            - narrate "<&a>You found a Tribute to the Gods!"

        on player gains xp for excavation:
        - if <yaml[events].read[tribute.active]> == false:
            - queue clear
        - if <util.random.int[1].to[2500]> <= 1:
            - give GodsTribute
            - narrate "<&a>You found a Tribute to the Gods!"
