QuestDataHandler:
    debug: false
    type: world
    events:
        on player joins:
        - define data <player.uuid>_quest_data
        - if <server.has_file[playerdata/<player.uuid>/quest_data.yml]>:
            - ~yaml load:playerdata/<player.uuid>/quest_data.yml id:<[data]>
        - else:
            - yaml create id:<[data]>
            - yaml id:<[data]> set player_uuid:<player.uuid>
            - ~yaml id:<[data]> savefile:playerdata/<player.uuid>/quest_data.yml
        - yaml set id:<[data]> set player_last_known_name:<player.name>
        on player quits:
        - ~yaml id:<script.yaml_key[data]> savefile:playerdata/<player.uuid>/quest_data.yml

QuestAcceptHandler:
    debug: false
    type: task
    definitions: player|quest_internalname|quest_name|quest_description|quest_objectives_list|quest_objectives_totals
    script:
    - define data <[player].uuid>_quest_data
    - yaml id:<[data]> set quests.active:|:<[quest_internalname]>
    - yaml id:<[data]> set quests.active.<[quest_internalname]>.name:<[quest_name]>
    - yaml id:<[data]> set quests.active.<[quest_internalname]>.description:<[quest_description]>
    - yaml id:<[data]> set quests.active.<[quest_internalname]>.objectives:<[quest_objectives_list]>
    - foreach <[quest_objective_list]>:
        - yaml id:<[data]> set quests.active.<[quest_internalname]>.objectives.<[value]>.progress:0
        - yaml id:<[data]> set quests.active.<[quest_internalname]>.objectives.<[value]>.total:<[quest_objectives_totals].get[<[loop_index]>]>